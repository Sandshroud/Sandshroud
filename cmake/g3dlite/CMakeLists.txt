PROJECT(g3dlite)

SET(prefix ${DEPENDENCY_SOURCES}/${PROJECT_NAME} )

SET(sources
g3dmath.inl
Quat.inl
Vector2.inl
Vector3.inl
Vector4.inl
AABox.cpp
Any.cpp
AnyVal.cpp
AreaMemoryManager.cpp
BinaryFormat.cpp
BinaryInput.cpp
BinaryOutput.cpp
Box.cpp
Box2D.cpp
BumpMapPreprocess.cpp
Capsule.cpp
CollisionDetection.cpp
Color1.cpp
Color1uint8.cpp
Color3.cpp
Color3uint8.cpp
Color4.cpp
Color4uint8.cpp
Cone.cpp
constants.cpp
ConvexPolyhedron.cpp
CoordinateFrame.cpp
Crypto.cpp
Crypto_md5.cpp
Cylinder.cpp
debugAssert.cpp
FileSystem.cpp
fileutils.cpp
filter.cpp
format.cpp
g3dfnmatch.cpp
g3dmath.cpp
GCamera.cpp
GLight.cpp
GThread.cpp
GUniqueID.cpp
Image1.cpp
Image1uint8.cpp
Image3.cpp
Image3uint8.cpp
Image4.cpp
Image4uint8.cpp
ImageFormat_convert.cpp
Intersect.cpp
license.cpp
Line.cpp
LineSegment.cpp
Log.cpp
Matrix.cpp
Matrix3.cpp
Matrix4.cpp
MemoryManager.cpp
MeshAlg.cpp
MeshAlgAdjacency.cpp
MeshAlgWeld.cpp
MeshBuilder.cpp
NetAddress.cpp
NetworkDevice.cpp
PhysicsFrame.cpp
PhysicsFrameSpline.cpp
Plane.cpp
PrecomputedRandom.cpp
prompt.cpp
Quat.cpp
Random.cpp
Ray.cpp
Rect2D.cpp
ReferenceCount.cpp
RegistryUtil.cpp
Sphere.cpp
SplineBase.cpp
stringutils.cpp
System.cpp
TextInput.cpp
TextOutput.cpp
ThreadSet.cpp
Triangle.cpp
uint128.cpp
UprightFrame.cpp
Vector2.cpp
Vector2int16.cpp
Vector3.cpp
Vector3int16.cpp
Vector3int32.cpp
Vector4.cpp
Vector4int8.cpp
Welder.cpp
WinMain.cpp
XML.cpp
vmap/BIH.cpp
vmap/DynamicTree.cpp
vmap/MapTree.cpp
vmap/ModelInstance.cpp
vmap/TileAssembler.cpp
vmap/VMapManager.cpp
vmap/WorldModel.cpp)

SET(headers
AABox.h
Any.h
AnyVal.h
AreaMemoryManager.h
Array.h
AtomicInt32.h
BinaryFormat.h
BinaryInput.h
BinaryOutput.h
BoundsTrait.h
Box.h
Box2D.h
BumpMapPreprocess.h
Capsule.h
CollisionDetection.h
Color1.h
Color1uint8.h
Color3.h
Color3uint8.h
Color4.h
Color4uint8.h
Cone.h
constants.h
ConvexPolyhedron.h
CoordinateFrame.h
Crypto.h
Cylinder.h
debug.h
debugAssert.h
debugPrintf.h
enumclass.h
EqualsTrait.h
FileSystem.h
fileutils.h
filter.h
format.h
G3D.h
G3DAll.h
g3dfnmatch.h
G3DGameUnits.h
g3dmath.h
GCamera.h
GImage.h
GLight.h
GMutex.h
GThread.h
GUniqueID.h
Image1.h
Image1uint8.h
Image3.h
Image3uint8.h
Image4.h
Image4uint8.h
ImageFormat.h
Intersect.h
KDTree.h
Line.h
LineSegment.h
Log.h
Map2D.h
Matrix.h
Matrix2.h
Matrix3.h
Matrix4.h
MemoryManager.h
MeshAlg.h
MeshBuilder.h
NetAddress.h
netheaders.h
NetworkDevice.h
networkHelpers.h
ParseError.h
PhysicsFrame.h
PhysicsFrameSpline.h
Plane.h
platform.h
Pointer.h
PointHashGrid.h
PointKDTree.h
PositionTrait.h
PrecomputedRandom.h
prompt.h
Quat.h
Queue.h
Random.h
Ray.h
Rect2D.h
ReferenceCount.h
RegistryUtil.h
serialize.h
Set.h
SmallArray.h
Sphere.h
Spline.h
splinefunc.h
stringutils.h
System.h
Table.h
TextInput.h
TextOutput.h
ThreadSet.h
Triangle.h
uint128.h
UprightFrame.h
Vector2.h
Vector2int16.h
Vector3.h
Vector3int16.h
Vector3int32.h
Vector4.h
Vector4int8.h
vectorMath.h
WeakCache.h
Welder.h
WrapMode.h
XML.h
vmap/BIH.h
vmap/BIHWrapper.h
vmap/DynamicTree.h
vmap/MapTree.h
vmap/ModelInstance.h
vmap/TileAssembler.h
vmap/VMapDefinitions.h
vmap/VMapManager.h
vmap/VMapTools.h
vmap/WorldModel.h)

foreach(src IN ITEMS ${sources} )
  SET( SRCS ${SRCS} ${prefix}/${src} )
endforeach(src)
foreach(src IN ITEMS ${headers} )
  SET( HEADERS ${HEADERS} ${prefix}/${src} )
endforeach(src)

include_directories( ${prefix} )
add_library(${PROJECT_NAME} STATIC ${SRCS} ${HEADERS} )
#Set it to the project name.
set(G3DLITE_LIBRARIES ${PROJECT_NAME} CACHE INTERNAL "g3dlite Libraries")
